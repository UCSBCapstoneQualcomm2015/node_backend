{
  "name": "passport-local-forms",
  "version": "0.1.0",
  "description": "Local username and password authentication strategy for Passport via Forms.",
  "author": {
    "name": "Adam Doyle",
    "email": "adamldoyle@gmail.com",
    "url": "http://adamldoyle.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/adamldoyle/passport-local-forms.git"
  },
  "bugs": {
    "url": "http://github.com/adamldoyle/passport-local-forms/issues"
  },
  "main": "./lib/passport-local-forms",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport": "~0.1.1"
  },
  "devDependencies": {
    "vows": "0.6.x",
    "forms": "0.1.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "keywords": [
    "passport",
    "local",
    "forms",
    "auth",
    "authn",
    "authentication"
  ],
  "readme": "# Passport-Local-Forms\r\n\r\n[Passport](http://passportjs.org/) strategy for authenticating with a username\r\nand password utilizing [Forms](https://github.com/caolan/forms).\r\n\r\nThis module lets you authenticate using a form in your Node.js applications.\r\nBy plugging into Passport, local forms authentication can be easily\r\nand unobtrusively integrated into any application or framework that supports\r\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\r\n[Express](http://expressjs.com/).\r\n\r\n## Installation\r\n\r\n    $ npm install passport-local-forms\r\n\r\n## Usage\r\n\r\n#### Configure Strategy\r\n\r\nThe local forms authentication strategy authenticates users using a username\r\nand password.  The strategy requires a `verify` callback, which accepts\r\nthese credentials and calls `done` providing a user.\r\n\r\n    var loginForm = forms.create(\r\n    {\r\n      username: fields.string({ required: true })\r\n    , password: fields.password({ required: true })\r\n    });\r\n    passport.use(new LocalStrategy(\r\n      {\r\n        form: loginForm\r\n      , formError: function(err, req, form) {\r\n          req.res.render('login', { loginForm: form, user: req.user, message: err.message });\r\n        }\r\n      }\r\n    , function(form, done) {\r\n        User.findOne({ username: form.data.username }, function (err, user) {\r\n          if (err) { return done(err); }\r\n          if (!user) { return done(null, false); }\r\n          if (!user.verifyPassword(form.data.password)) { return done(null, false); }\r\n          return done(null, user);\r\n        });\r\n      }\r\n    ));\r\n\r\n#### Authenticate Requests\r\n\r\nUse `passport.authenticate()`, specifying the `'local-forms'` strategy, to\r\nauthenticate requests.\r\n\r\nFor example, as route middleware in an [Express](http://expressjs.com/)\r\napplication:\r\n\r\n    app.post('/login', \r\n      passport.authenticate('local-forms', { failureRedirect: '/login' }),\r\n      function(req, res) {\r\n        res.redirect('/');\r\n      });\r\n\r\n## Examples\r\n\r\nFor a complete, working example, refer to the [login example](https://github.com/adamldoyle/passport-local-forms/tree/master/examples/login).\r\n\r\n## Tests\r\n\r\n    $ npm install --dev\r\n    $ make test\r\n\r\n[![Build Status](https://secure.travis-ci.org/adamldoyle/passport-local-forms.png)](http://travis-ci.org/adamldoyle/passport-local-forms)\r\n\r\n## Credits\r\n\r\n  - [Adam Doyle](http://github.com/adamldoyle)\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2012 Adam Doyle\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "_id": "passport-local-forms@0.1.0",
  "dist": {
    "shasum": "6214d17c29e7959253f16edaceb2b404eebfbad5",
    "tarball": "http://registry.npmjs.org/passport-local-forms/-/passport-local-forms-0.1.0.tgz"
  },
  "_npmVersion": "1.1.69",
  "_npmUser": {
    "name": "adamldoyle",
    "email": "adamldoyle@gmail.com"
  },
  "maintainers": [
    {
      "name": "adamldoyle",
      "email": "adamldoyle@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "6214d17c29e7959253f16edaceb2b404eebfbad5",
  "_resolved": "https://registry.npmjs.org/passport-local-forms/-/passport-local-forms-0.1.0.tgz",
  "_from": "passport-local-forms@*"
}
